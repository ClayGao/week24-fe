{"version":3,"sources":["components/nav/Nav.js","components/nav/index.js","actionsTypes.js","WebAPI.js","containers/NavContainer.js","actions.js","components/post_list/index.js","components/post_list/PostList.js","containers/PostListContainer.js","CodeBlock.js","components/post/index.js","components/post/Post.js","containers/PostContainer.js","components/about/index.js","components/about/About.js","components/write/index.js","components/write/Write.js","containers/WriteContainer.js","components/home/index.js","components/home/Home.js","containers/HomeContainer.js","ScrollToTop.js","App.js","serviceWorker.js","reducers/getPostsReducer.js","reducers/getWeatherReducer.js","reducers/getSinglePostReducer.js","reducers/index.js","index.js"],"names":["DateInfo","currentWeather","currentTime","className","map","data","Fragment","toDateString","Number","MinT","MaxT","PoP","Tab","label","to","exact","path","children","match","Nav","props","scroll","setState","isMove","window","scrollY","state","this","getWeatherData","addEventListener","removeEventListener","Date","weatherData","filter","getHours","time","Component","GET_POSTS","GET_RECENT_POSTS","GET_SINGLE_POST","CREATE_SINGLE_POST","BEGIN_EDIT_SINGLE_POST","EDIT_SINGLE_POST","DELETE_SINGLE_POST","GET_WEATHER_DATA","url","createSinglePost","axios","post","then","resp","alert","editSinglePost","listId","title","body","patch","mapDispatchToProps","type","actionTypes","payload","get","Weather","weatherJSON","cwbopendata","dataset","location","weatherElement","i","push","Wx","parameter","parameterName","CI","connect","getWeatherReducer","PostList","getPostList","history","isLoadingGetPosts","postListData","card","key","id","onClick","source","author","withRouter","getPostsReducer","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","php","language","value","style","tomorrow","PureComponent","defaultProps","Post","postId","params","getSinglePost","prevProps","isDeleted","isEdited","scrollTo","singlePostData","isLoadingSinglePost","deleteSinglePost","beginEditSinglePost","isEditing","defaultValue","onChange","e","target","renderers","code","delete","WebAPI","editSinglePostReducer","getSinglePostReducer","About","Write","handlePostArticle","handleInput","name","isCreated","element","autoComplete","debounceTimeout","placeholder","createSinglePostReducer","Home","getRecentPosts","ScrollToTop","App","basename","component","Boolean","hostname","initState","isLoadingGetWeatherData","editingContent","createPost","blogApp","combineReducers","action","store","createStore","applyMiddleware","promiseMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f89d097.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport shallowEqual from 'shallowequal'\r\n\r\nconst DateInfo = ({currentWeather, currentTime}) => {\r\n  return (\r\n    <span  className=\"date-info\">\r\n    {currentWeather.map(data=>(\r\n      <React.Fragment>\r\n        <li>{currentTime.toDateString()}</li>\r\n        <li>T: {(Number(data.MinT)+Number(data.MaxT))/2}°C</li>\r\n        <li>Rain: {data.PoP}%</li>\r\n      </React.Fragment>\r\n    ))}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst Tab = ({ label, to, exact }) => {\r\n    return (\r\n      <Route\r\n        path={to}\r\n        exact={exact}\r\n        children={({ match }) => (\r\n          <li className={match ? \"active\" : \"\"}>\r\n            <Link className=\"link\" to={to}>{label}</Link>\r\n          </li>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          isMove: 0\r\n        }\r\n    }\r\n\r\n    scroll = () => {\r\n        this.setState({\r\n          isMove : window.scrollY\r\n        })\r\n    }\r\n  \r\n    /*\r\n    shouldComponentUpdate(nextProps, nextState){\r\n      return !shallowEqual(this.state.isMove, nextState.isMove)\r\n    }\r\n    */\r\n    \r\n    componentDidMount() {\r\n      this.props.getWeatherData()\r\n      window.addEventListener(\"scroll\", this.scroll);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      window.removeEventListener(\"scroll\", this.scroll);\r\n    }\r\n\r\n    render(){\r\n      const currentTime = new Date()\r\n      const {isMove} = this.state\r\n      const {weatherData} = this.props\r\n      const currentWeather = weatherData.filter(data => (\r\n        currentTime.getHours() >= 12 && currentTime.getHours() < 18) ? \r\n        data.time ===  '今早' :  data.time ===  '今晚'\r\n      )\r\n      return (\r\n        <nav className={isMove ? \"window-is-moving\" : \"window-unmoving\"}>\r\n            <ul>\r\n                <Tab exact={true} to=\"/\" label=\"Home\" />\r\n                <Tab to=\"/about\" label=\"About\" />\r\n                <Tab to=\"/list\" label=\"List\" />\r\n                <Tab to=\"/write\" label=\"Write\" />\r\n                <DateInfo currentWeather={currentWeather} currentTime={currentTime}/>\r\n            </ul>\r\n        </nav>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default Nav\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Nav from './Nav';\r\n\r\nexport default Nav;","// Action Types\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const GET_RECENT_POSTS = 'GET_RECENT_POSTS'\r\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST'\r\nexport const CREATE_SINGLE_POST = 'CREATE_SINGLE_POST'\r\nexport const BEGIN_EDIT_SINGLE_POST = 'BEGIN_EDIT_SINGLE_POST'\r\nexport const EDIT_SINGLE_POST = 'EDIT_SINGLE_POST'\r\nexport const DELETE_SINGLE_POST = 'DELETE_SINGLE_POST'\r\nexport const GET_WEATHER_DATA = 'GET_WEATHER_DATA'\r\n\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://qootest.com/posts'\r\nconst weatherAuth = 'CWB-8D8B5254-991F-47D6-A679-B8EE1C6CDAE2'\r\nconst weatherDataId = 'F-C0032-001'\r\n\r\nexport const getPosts = () => axios.get(url + '?_sort=id&_order=desc')\r\n\r\nexport const getRecentPosts = () => axios.get(url + '?_sort=id&_order=desc&_limit=3')\r\n\r\nexport const createSinglePost = (data) => axios.post(url, data).then(resp => alert('Push Success! :D'))\r\n\r\nexport const getSinglePost = (listId) => axios.get(url + '/' + listId)\r\n\r\nexport const editSinglePost = (listId, title, body) => axios.patch(url + '/' + listId, { title: title, body: body })\r\n\r\nexport const deleteSinglePost = (listId) => axios.delete(url + '/' + listId)\r\n\r\n// 取得天氣 API\r\nexport const getWeather = () => axios.get(`https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/${weatherDataId}?Authorization=${ weatherAuth}&format=JSON`)\r\n.then(resp => {\r\n    let Weather = []\r\n    let time = ''\r\n    const weatherJSON = resp.data.cwbopendata.dataset.location[0].weatherElement\r\n    for(var i = 0; i < 3; i++){\r\n        if (i === 0) { time = '今早'}\r\n        else if (i === 1) {time = '今晚'}\r\n        else { time = '明日' }\r\n        Weather.push({\r\n                    time,\r\n                    Wx: weatherJSON[0].time[i].parameter.parameterName,\r\n                    MaxT: weatherJSON[1].time[i].parameter.parameterName,\r\n                    MinT: weatherJSON[2].time[i].parameter.parameterName,\r\n                    CI: weatherJSON[3].time[i].parameter.parameterName,\r\n                    PoP: weatherJSON[4].time[i].parameter.parameterName\r\n                }) \r\n    }\r\n    return Weather;\r\n})\r\n\r\n\r\n","import React from 'react';\r\nimport Nav from '../components/nav'\r\nimport { getWeatherData } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavContainer = props => {\r\n    return <Nav {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        weatherData: state.getWeatherReducer.weatherData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getWeatherData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavContainer)","import * as actionTypes from './actionsTypes'\r\nimport * as WebAPI from './WebAPI'\r\n\r\n// Action creator\r\nexport const getPostList = () => ({\r\n    type: actionTypes.GET_POSTS,\r\n    payload: WebAPI.getPosts()\r\n})\r\n\r\nexport const getRecentPosts = () => ({\r\n    type: actionTypes.GET_RECENT_POSTS,\r\n    payload: WebAPI.getRecentPosts()\r\n})\r\n\r\nexport const getSinglePost = (postId) => ({\r\n    type: actionTypes.GET_SINGLE_POST,\r\n    payload: WebAPI.getSinglePost(postId)\r\n})\r\n\r\nexport const createSinglePost = (data) => ({\r\n    type: actionTypes.CREATE_SINGLE_POST,\r\n    payload: WebAPI.createSinglePost(data)\r\n})\r\n\r\nexport const deleteSinglePost = (postId) => ({\r\n    type: actionTypes.DELETE_SINGLE_POST,\r\n    payload: WebAPI.deleteSinglePost(postId)\r\n})\r\n\r\nexport const beginEditSinglePost = (title, body) => ({\r\n    type: actionTypes.BEGIN_EDIT_SINGLE_POST,\r\n    title,\r\n    body\r\n})\r\n\r\nexport const editSinglePost = (postId, title, body) => ({\r\n    type: actionTypes.EDIT_SINGLE_POST,\r\n    payload: WebAPI.editSinglePost(postId, title, body)\r\n})\r\n\r\n\r\nexport const getWeatherData = () => ({\r\n    type: actionTypes.GET_WEATHER_DATA,\r\n    payload: WebAPI.getWeather()\r\n})\r\n\r\n\r\n","import PostList from './PostList';\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass PostList extends Component {\r\n \r\n    componentDidMount() {\r\n        this.props.getPostList()\r\n    }\r\n    \r\n    render(){\r\n        const {history, isLoadingGetPosts, postListData} = this.props\r\n        return (\r\n            <div className=\"board\">\r\n            <div className=\"page-title\">\r\n                Articles\r\n            </div>\r\n            {isLoadingGetPosts ? \r\n            <div className=\"loading\">\r\n                Loading... \r\n            </div>:\r\n            postListData.map(card => (\r\n                <div key={card.id} \r\n                    className=\"post\" \r\n                    onClick={() => { \r\n                        history.push('/list/' + card.id)\r\n                    }}>\r\n                    <div className=\"post-title\">\r\n                        {card.title}\r\n                    </div>\r\n                    <ReactMarkdown \r\n                        className=\"post-text\" \r\n                        source={card.body} \r\n                    />\r\n                    <div className=\"post-editor\">\r\n                        Author: {card.author ? card.author : \"Noname\"}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default PostList","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport PostList from '../components/post_list'\r\nimport { getPostList } from '../actions'\r\n\r\nconst PostListContainer = props => {\r\n    return <PostList {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoadingGetPosts: state.getPostsReducer.isLoadingGetPosts,\r\n        postListData: state.getPostsReducer.postListData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {  \r\n    getPostList\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostListContainer)) ","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport { jsx, javascript, php } from \"react-syntax-highlighter/dist/esm/languages/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\r\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\n    SyntaxHighlighter.registerLanguage(\"php\", php);\r\n  }\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <figure className=\"highlight\">\r\n        <SyntaxHighlighter language={language} style={tomorrow}>\r\n          {value}\r\n        </SyntaxHighlighter>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;","import Post from './Post';\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport CodeBlock from \"../../CodeBlock\";\r\n\r\nclass Post extends Component {\r\n    \r\n    componentDidMount() {\r\n        const postId = this.props.match.params.listId\r\n        this.props.getSinglePost(postId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const postId = this.props.match.params.listId\r\n        const { isDeleted, isEdited, history } = this.props\r\n        if (isDeleted !== prevProps.isDeleted && !isDeleted) {\r\n            history.push('/list')\r\n        }\r\n        if (isEdited !== prevProps.isEdited && !isEdited) {\r\n            this.props.getSinglePost(postId)\r\n            window.scrollTo(0, 0) // 回到頁面頂端\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const postId = this.props.match.params.listId\r\n        const { singlePostData, \r\n                isLoadingSinglePost, \r\n                deleteSinglePost, \r\n                beginEditSinglePost, \r\n                editSinglePost, \r\n                title,\r\n                isEditing,\r\n                body} = this.props\r\n        return (\r\n            <div className=\"board\">\r\n                <div key={singlePostData.id} \r\n                    className=\"single-post\" > \r\n                    {!isEditing ? \r\n                    isLoadingSinglePost ? \r\n                    <div className=\"loading\">\r\n                        Loading... \r\n                    </div>\r\n                    :\r\n                    <>\r\n                    <div className=\"single-post-title\">\r\n                        {singlePostData.title}\r\n                    </div>\r\n                    <ReactMarkdown \r\n                        className=\"single-post-text\" \r\n                        renderers={{ code: CodeBlock }}\r\n                        source={!isLoadingSinglePost ? singlePostData.body : \"Loading...\"} \r\n                    />\r\n                    <div className=\"single-post-editor\">\r\n                        {\"Author: \" + (singlePostData.author || \"Noname\")}\r\n                    </div>\r\n                    <div className=\"single-post-editblock\">\r\n                        <span className=\"single-post-editblock-edit\" \r\n                            onClick={() => { \r\n                                beginEditSinglePost(singlePostData.title, singlePostData.body) \r\n                                }}>Edit</span>\r\n                        <span className=\"single-post-editblock-delete\" \r\n                            onClick={() => { \r\n                                deleteSinglePost(postId)\r\n                                }}>Delete</span>\r\n                    </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <form className=\"edit-article\">\r\n                        <input className=\"edit-article-title\" type=\"text\"  defaultValue={singlePostData.title} onChange={(e) => {beginEditSinglePost(e.target.value, body)}}/>\r\n                        <textarea className=\"edit-article-text\" defaultValue={singlePostData.body} onChange={(e) => {beginEditSinglePost(title, e.target.value)}}/>\r\n                        <input className=\"edit-article-button\" type=\"button\" value=\"Send\" onClick={()=>{ editSinglePost(postId, title, body)}} />\r\n                    </form>\r\n                    <div className=\"single-post-editor\">\r\n                        {\"Author: \" + (singlePostData.author || \"Noname\")}\r\n                    </div>\r\n                    </>\r\n                    }       \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default Post","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Post from '../components/post'\r\nimport { getSinglePost, deleteSinglePost, beginEditSinglePost, editSinglePost } from '../actions'\r\n\r\nconst PostContainer = props => {\r\n    return <Post {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isEdited: state.editSinglePostReducer.isEdited,\r\n        isDeleted: state.editSinglePostReducer.isDeleted,\r\n        isLoadingSinglePost: state.getSinglePostReducer.isLoadingSinglePost,\r\n        singlePostData: state.getSinglePostReducer.singlePostData,\r\n        isEditing: state.editSinglePostReducer.isEditing,\r\n        title: state.editSinglePostReducer.title,\r\n        body: state.editSinglePostReducer.body\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {      \r\n    getSinglePost,\r\n    deleteSinglePost,\r\n    beginEditSinglePost,\r\n    editSinglePost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostContainer)","import About from './About';\r\n\r\nexport default About;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst About = () => {\r\n    return ( \r\n         <div  className=\"board\">\r\n            <div className=\"page-title\">\r\n                About Blog\r\n            </div>\r\n             <div className=\"info-page\">\r\n                 <ReactMarkdown className=\"single-post-text\" source=\"\r\n                    ## Markdown 語法\r\n                      目前 Markdown 語法還有一些小 Bug 未解，比如說有些字元 (如<ul>) 不能被 render\r\n                    ## <Switch>\r\n                      這是目前使用 React-router 還沒碰觸的一塊，有時間需要加緊研究\r\n                    ## Blog 待改進的地方\r\n                      比如說按下發文按鈕之後可以有動畫跳回 /list，這應該也是可以實作的部分\r\n                 \" />\r\n                 <div className=\"single-post-editor\">\r\n                        Author: Clay Gao\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     )\r\n  }\r\n\r\n\r\nexport default About","import Write from './Write';\r\n\r\nexport default Write;","import React, { Component } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nclass Write extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title:'',\r\n            author:'',\r\n            body:''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { history, isCreated } = this.props\r\n        if(isCreated !== prevProps.isCreated && !isCreated) {\r\n            history.push('/list')\r\n        }\r\n    }\r\n \r\n\r\n    handlePostArticle = () => {\r\n        const data = this.state \r\n        this.props.createSinglePost(data)\r\n        this.setState({\r\n            title:'',\r\n            author:'',\r\n            body:''\r\n        })\r\n    }\r\n    \r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const {title, author, body} = this.state\r\n        return (\r\n            <div  className=\"board\">\r\n                <div className=\"page-title\">\r\n                    Write Something :D\r\n                </div>\r\n                <form className=\"write-article\">\r\n                    Title: <DebounceInput \r\n                            element=\"input\" \r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            debounceTimeout={1000} \r\n                            onChange={this.handleInput} \r\n                            placeholder=\"Enter your title...\" \r\n                            type=\"text\" \r\n                            className=\"write-article-title\" \r\n                            value={title} />\r\n                    Your name: <DebounceInput \r\n                                element=\"input\" \r\n                                name=\"author\"\r\n                                autoComplete=\"off\"\r\n                                debounceTimeout={1000} \r\n                                onChange={this.handleInput} \r\n                                placeholder=\"Enter your name...\" \r\n                                type=\"text\" \r\n                                className=\"write-article-editor\" \r\n                                value={author} />\r\n                    Content:　<DebounceInput \r\n                                name=\"body\"\r\n                                element=\"textarea\" \r\n                                debounceTimeout={800} \r\n                                onChange={this.handleInput} \r\n                                placeholder=\"Enter something...\" \r\n                                className=\"write-article-text\" \r\n                                value={body} />\r\n                    <input className=\"write-article-button\" type=\"button\" onClick={this.handlePostArticle} value=\"Send\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Write","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Write from '../components/write'\r\nimport { createSinglePost } from '../actions'\r\n\r\nconst WriteContainer = props => {\r\n    return <Write {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isCreated: state.createSinglePostReducer.isCreated\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {           \r\n    createSinglePost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WriteContainer)","import Home from './Home';\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass Home extends Component {\r\n \r\n    componentDidMount() {\r\n        this.props.getRecentPosts()\r\n    }\r\n    \r\n    render(){\r\n        const {history, postListData, weatherData} = this.props\r\n        return (\r\n            <div>\r\n                <div  className=\"board\">\r\n                    <div className=\"page-title\">\r\n                        Today  Weather\r\n                    </div>\r\n                    <div className=\"weather\" > \r\n                            {weatherData.map(data => (\r\n                                <div className=\"weather-card\"> \r\n                                    <h1>{data.time}</h1>\r\n                                    <p>Weather: {data.Wx}</p>\r\n                                    <p>Feel: {data.CI}</p>\r\n                                    <p>Max Temp: {data.MaxT}°C</p>\r\n                                    <p>Min Temp: {data.MinT}°C</p>\r\n                                    <p>Rain: {data.PoP}%</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"page-title\">\r\n                        The  Latest  Articles\r\n                    </div>\r\n                    {postListData.map(card => (\r\n                        <div key={card.id} \r\n                            className=\"post\" \r\n                            onClick={() => { \r\n                                history.push('/list/' + card.id)\r\n                            }}>\r\n                            <div className=\"post-title\">\r\n                                {card.title}\r\n                            </div>\r\n                            <ReactMarkdown \r\n                                className=\"post-text\" \r\n                                source={card.body} \r\n                            />\r\n                            <div className=\"post-editor\">\r\n                                Author: {card.author ? card.author : \"Noname\"}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"page-title\">\r\n                        About  Me\r\n                    </div>\r\n                    <div className=\"info-page\" >        \r\n                        <div className=\"single-post-text\">\r\n                            Hi, I am Clay \r\n                            <br />\r\n                            I am Learing Web Frontend Develope and try to bulid my Blog with React and React-router\r\n                            <br />\r\n                            Maybe it looks ugly Orz.... but everything will be alright, doesn't it ?\r\n                            <br />\r\n                            By the way, the blog now you see won't be the latest version \r\n                            <br />\r\n                            I will update week by week\r\n                            <br />\r\n                            So, give me some time\r\n                            <br />\r\n                            See you :D\r\n                            <br />\r\n                            Xin Yi Liu go to eat the SHIT :D\r\n                        </div>\r\n                        <div className=\"single-post-editor\">\r\n                            Author: ClayGao\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default Home ","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport Home from '../components/home'\r\nimport { getRecentPosts } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst HomeContainer = props => {\r\n    return <Home {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postListData: state.getPostsReducer.postListData,\r\n        weatherData: state.getWeatherReducer.weatherData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {         \r\n    getRecentPosts,\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeContainer))","import { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n/* 可以套用在每個需要換頁的部分 */\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n          window.scrollTo(0, 0)\r\n        }\r\n    }\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport './scss/App.scss';\r\nimport Nav from './containers/NavContainer'\r\nimport PostList from './containers/PostListContainer'\r\nimport Post from './containers/PostContainer'\r\nimport About from './components/about'\r\nimport Write from './containers/WriteContainer'\r\nimport Home from './containers/HomeContainer'\r\nimport ScrollToTop from './ScrollToTop'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n      return (\r\n        <Router basename=\"/week24-fe/my-app/build\">\r\n          <div className=\"App\">\r\n              <Nav />\r\n              <div className=\"wrapper\"> \r\n              <ScrollToTop>\r\n                <Switch> \r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route path=\"/list\" exact component={PostList} />\r\n                    <Route path=\"/list/:listId\" component={Post} />\r\n                    <Route path=\"/write\" exact component={Write} /> \r\n                </Switch>\r\n              </ScrollToTop>\r\n              </div>\r\n          </div>\r\n        </Router>\r\n      )\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actionsTypes';\r\n\r\nconst initState = {\r\n    postListData: [],\r\n    isLoadingGetPosts: false\r\n}\r\n\r\nexport default function getPostsReducer(state = initState, action) {\r\n    switch(action.type) {\r\n        case actionTypes.GET_POSTS + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoadingGetPosts: true,\r\n            }\r\n        case actionTypes.GET_POSTS + '_FULFILLED' :\r\n            return {\r\n                ...state,\r\n                postListData: action.payload.data,\r\n                isLoadingGetPosts: false  \r\n            }\r\n        case actionTypes.GET_RECENT_POSTS + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoadingGetPosts: true,\r\n            }\r\n        case actionTypes.GET_RECENT_POSTS + '_FULFILLED' :\r\n            return {\r\n                ...state,\r\n                postListData: action.payload.data,\r\n                isLoadingGetPosts: false  \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actionTypes from '../actionsTypes';\r\n\r\nconst initState = {\r\n    weatherData: [],\r\n    isLoadingGetWeatherData: false,\r\n    currentTime: {}\r\n}\r\n\r\nexport default function getWeatherReducer(state = initState, action) {\r\n    switch(action.type) {\r\n        case actionTypes.GET_WEATHER_DATA + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoadingGetWeatherData: true,\r\n            }\r\n        case actionTypes.GET_WEATHER_DATA + '_FULFILLED':\r\n            return {\r\n                ...state,\r\n                weatherData: action.payload,\r\n                isLoadingGetWeatherData: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actionTypes from '../actionsTypes';\r\n\r\nconst initState = {\r\n    singlePostData: [],\r\n    isLoadingSinglePost: false,\r\n}\r\n\r\nconst editingContent = {\r\n    isEdited: false,\r\n    isEditing: false,\r\n    isDeleted : false,\r\n    title: '',\r\n    body: ''\r\n}\r\n\r\nconst createPost = {\r\n    isCreated: false,\r\n}\r\n\r\nexport function getSinglePostReducer(state = initState, action) {\r\n    switch(action.type) {\r\n        case actionTypes.GET_SINGLE_POST  + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoadingSinglePost: true,\r\n            }\r\n        case actionTypes.GET_SINGLE_POST + '_FULFILLED':\r\n            return {\r\n                ...state,\r\n                singlePostData: action.payload.data,\r\n                isLoadingSinglePost: false  \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function editSinglePostReducer(state = editingContent, action) {\r\n    switch(action.type) {\r\n        case actionTypes.BEGIN_EDIT_SINGLE_POST:\r\n            return {\r\n                ...state,\r\n                isEditing: true,\r\n                title: action.title,\r\n                body: action.body\r\n            }\r\n        case actionTypes.EDIT_SINGLE_POST + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isEdited: true,\r\n                title: action.title,\r\n                body: action.body, \r\n            }\r\n        case actionTypes.EDIT_SINGLE_POST + '_FULFILLED':\r\n            return {\r\n                ...state,\r\n                isEdited: false,\r\n                isEditing: false,\r\n            }\r\n        case actionTypes.DELETE_SINGLE_POST  + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isDeleted: true,\r\n            }\r\n        case actionTypes.DELETE_SINGLE_POST + '_FULFILLED':\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function createSinglePostReducer(state = createPost, action) {\r\n    switch(action.type) {\r\n        case actionTypes.CREATE_SINGLE_POST + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isCreated: true,\r\n            }\r\n        case actionTypes.CREATE_SINGLE_POST + '_FULFILLED':\r\n            return {\r\n                ...state,\r\n                isCreated: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport getPostsReducer from './getPostsReducer'\r\nimport  getWeatherReducer from './getWeatherReducer'\r\nimport { getSinglePostReducer, editSinglePostReducer, createSinglePostReducer} from './getSinglePostReducer'\r\n\r\nconst blogApp = combineReducers({\r\n    getPostsReducer,\r\n    getSinglePostReducer,\r\n    editSinglePostReducer,\r\n    getWeatherReducer,\r\n    createSinglePostReducer\r\n});\r\n\r\nexport default blogApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport blogApp from './reducers'\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\n\r\nlet store = createStore(blogApp, applyMiddleware(promiseMiddleware))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}